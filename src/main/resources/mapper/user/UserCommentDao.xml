<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vigekoo.modules.user.dao.UserCommentDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.vigekoo.modules.user.entity.UserComment" id="userCommentMap">
        <result property="createTime" column="create_time"/>
        <result property="modifyTime" column="modify_time"/>
        <result property="operIp" column="oper_ip"/>
        <result property="operUserId" column="oper_user_id"/>
        <result property="delFlag" column="del_flag"/>
        <result property="userCommentId" column="user_comment_id"/>
        <result property="infoId" column="info_id"/>
        <result property="userId" column="user_id"/>
        <result property="receiver" column="receiver"/>
        <result property="detail" column="detail"/>
        <result property="parentId" column="parent_id"/>
        <result property="parentDetail" column="parent_detail"/>
        
         
        <association property="commentUserDetail" column="user_id" javaType="com.vigekoo.modules.user.entity.UserDetail">  
	        <result property="nickname" column="cnickname"/>
        </association> 
        
         <association property="receiverUserDetail" column="receiver" javaType="com.vigekoo.modules.user.entity.UserDetail">  
	        <result property="nickname" column="drnickname"/>
        </association> 
    </resultMap>



	<select id="queryObject" resultType="com.vigekoo.modules.user.entity.UserComment">
		select * from user_comment where `del_flag` = 0 and user_comment_id = #{value}
	</select>

	<select id="queryList" resultMap="userCommentMap">
		select c.*,d.nickname cnickname ,dr.nickname drnickname from user_comment c 
		left join user_detail d on c.user_id = d.user_id
		left join user_detail dr on c.user_id = dr.user_id
		
		<where>
			`del_flag` = 0 
			<if test="keyword != null and keyword != ''">
				and (
					`info_id` like concat('%',#{keyword},'%')
				)
			</if>
		</where>
		
		
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by user_comment_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from user_comment 
		<where>
			`del_flag` = 0 
			<if test="keyword != null and keyword != ''">
				and (
					`info_id` like concat('%',#{keyword},'%')
				)
			</if>
		</where>
	</select>
	 
	<insert id="save" parameterType="com.vigekoo.modules.user.entity.UserComment">
		insert into user_comment
		(
			`create_time`, 
			`modify_time`, 
			`oper_ip`, 
			`oper_user_id`, 
			`del_flag`, 
			`user_comment_id`, 
			`info_id`, 
			`user_id`, 
			`receiver`, 
			`detail`, 
			`parent_id`, 
			`parent_detail`
		)
		values
		(
			#{createTime}, 			
			#{modifyTime}, 			
			#{operIp}, 			
			#{operUserId}, 			
			#{delFlag}, 			
			#{userCommentId}, 			
			#{infoId}, 			
			#{userId}, 			
			#{receiver}, 			
			#{detail}, 			
			#{parentId}, 			
			#{parentDetail}			
		)
	</insert>
	 
	<update id="update" parameterType="com.vigekoo.modules.user.entity.UserComment">
		update user_comment 
		<set>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="modifyTime != null">`modify_time` = #{modifyTime}, </if>
			<if test="operIp != null">`oper_ip` = #{operIp}, </if>
			<if test="operUserId != null">`oper_user_id` = #{operUserId}, </if>
			<if test="delFlag != null">`del_flag` = #{delFlag}, </if>
			<if test="infoId != null">`info_id` = #{infoId}, </if>
			<if test="userId != null">`user_id` = #{userId}, </if>
			<if test="receiver != null">`receiver` = #{receiver}, </if>
			<if test="detail != null">`detail` = #{detail}, </if>
			<if test="parentId != null">`parent_id` = #{parentId}, </if>
			<if test="parentDetail != null">`parent_detail` = #{parentDetail}</if>
		</set>
		where user_comment_id = #{userCommentId}
	</update>
	
	<delete id="delete">
		update user_comment  set  `del_flag` = 1 where user_comment_id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		update user_comment  set  `del_flag` = 1 where user_comment_id in 
		<foreach item="userCommentId" collection="array" open="(" separator="," close=")">
			#{userCommentId}
		</foreach>
	</delete>

</mapper>